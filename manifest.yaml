---
# Source: vault/charts/base/templates/service_account.tpl
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-base
  labels:
    app.kubernetes.io/name: base
    app.kubernetes.io/instance: release-name
    helm.sh/chart: base-0.0.1
    app.kubernetes.io/managed-by: Helm
automountServiceAccountToken: true
---
# Source: vault/charts/base/templates/secrets.tpl
apiVersion: v1
kind: Secret
metadata:
  name: release-name-base-env-vars
  labels:
    app.kubernetes.io/name: base
    app.kubernetes.io/instance: release-name
    helm.sh/chart: base-0.0.1
    app.kubernetes.io/managed-by: Helm
data:
  VAULT_DEV_ROOT_TOKEN_ID: cm9vdA==
---
# Source: vault/charts/base/templates/config_maps.tpl
apiVersion: v1
kind: ConfigMap
binaryData: {}
data:
  ___vault___config.d___config.json: |
    {"disable_mlock":true,"storage":{"file":{"path":"/vault/file"}},"ui":true}
metadata:
  annotations: {}
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: base
    helm.sh/chart: base-0.0.1
  name: release-name-base-files
---
# Source: vault/charts/base/templates/persistent_volume_claims.tpl
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: release-name-base-file
  labels:
    app.kubernetes.io/name: base
    app.kubernetes.io/instance: release-name
    helm.sh/chart: base-0.0.1
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# Source: vault/charts/base/templates/service.tpl
apiVersion: v1
kind: Service
metadata:
  name: release-name-base
  labels:
    app.kubernetes.io/name: base
    app.kubernetes.io/instance: release-name
    helm.sh/chart: base-0.0.1
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  - name: http
    port: 8200
---
# Source: vault/charts/base/templates/deployment.tpl
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-base
  labels:
    app.kubernetes.io/name: base
    app.kubernetes.io/instance: release-name
    helm.sh/chart: base-0.0.1
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: base
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: base
        app.kubernetes.io/instance: release-name
        helm.sh/chart: base-0.0.1
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: release-name-base
      containers:
        - name: base
          image: "hashicorp/vault:1.20.2"
          envFrom:
            - secretRef:
                name: release-name-base-env-vars
          volumeMounts:
            - mountPath: /vault/config.d/config.json
              name: config-map-files
              readOnly: true
              subPath: ___vault___config.d___config.json
            - mountPath: /vault/file
              name: persistent-volume-claim-file
      volumes:
        - configMap:
            name: release-name-base-files
          name: config-map-files
        - name: persistent-volume-claim-file
          persistentVolumeClaim:
            claimName: release-name-base-file
---
# Source: vault/charts/base/templates/ingress.tpl
apiVersion: "networking.k8s.io/v1"
kind: Ingress
metadata:
  name: release-name-base
  labels:
    app.kubernetes.io/name: base
    app.kubernetes.io/instance: release-name
    helm.sh/chart: base-0.0.1
    app.kubernetes.io/managed-by: Helm
spec:
  rules:
  - host: vault.example.local
    http:
      paths:
      - backend:
          service:
            name: release-name-base
            port:
              name: http
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - vault.example.local
    secretName: vault-tls-secret
---
# Source: vault/charts/base/templates/service_monitor.tpl
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: release-name-base
  labels:
    app.kubernetes.io/name: base
    app.kubernetes.io/instance: release-name
    helm.sh/chart: base-0.0.1
    app.kubernetes.io/managed-by: Helm
spec:
  endpoints:
  - path: /sys/metrics
    port: http
  selector:
    matchLabels:
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/name: base
