suite: PersistentVolumeClaims template
templates:
  - templates/persistent_volume_claims.tpl

tests:
  - it: renders a PersistentVolumeClaim with basic configuration
    set:
      persistentVolumeClaims:
        data:
          spec:
            resources:
              requests:
                storage: 10Gi
    asserts:
      - isKind:
          of: PersistentVolumeClaim
      - equal:
          path: metadata.name
          value: RELEASE-NAME-base-data
      - equal:
          path: spec.resources.requests.storage
          value: 10Gi

  - it: renders a PersistentVolumeClaim with access modes
    set:
      persistentVolumeClaims:
        storage:
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 5Gi
    asserts:
      - isKind:
          of: PersistentVolumeClaim
      - equal:
          path: metadata.name
          value: RELEASE-NAME-base-storage
      - contains:
          path: spec.accessModes
          content: ReadWriteOnce

  - it: renders a PersistentVolumeClaim with storage class
    set:
      persistentVolumeClaims:
        file:
          spec:
            storageClassName: fast-ssd
            resources:
              requests:
                storage: 1Gi
    asserts:
      - isKind:
          of: PersistentVolumeClaim
      - equal:
          path: spec.storageClassName
          value: fast-ssd

  - it: renders multiple PersistentVolumeClaims
    set:
      persistentVolumeClaims:
        data:
          spec:
            resources:
              requests:
                storage: 10Gi
        logs:
          spec:
            resources:
              requests:
                storage: 5Gi
    asserts:
      - hasDocuments:
          count: 2

  - it: renders a PersistentVolumeClaim with volume mode
    set:
      persistentVolumeClaims:
        block-storage:
          spec:
            volumeMode: Block
            resources:
              requests:
                storage: 100Gi
    asserts:
      - isKind:
          of: PersistentVolumeClaim
      - equal:
          path: spec.volumeMode
          value: Block

  - it: renders a PersistentVolumeClaim with labels and annotations
    skip:
      reason: "Need to verify metadata implementation in template"
    set:
      persistentVolumeClaims:
        data:
          metadata:
            labels:
              storage-type: database
            annotations:
              volume.beta.kubernetes.io/storage-provisioner: kubernetes.io/aws-ebs
          spec:
            resources:
              requests:
                storage: 20Gi
    asserts:
      - isKind:
          of: PersistentVolumeClaim
      - equal:
          path: metadata.labels["storage-type"]
          value: database
      - equal:
          path: metadata.annotations["volume.beta.kubernetes.io/storage-provisioner"]
          value: kubernetes.io/aws-ebs

  - it: should not render when persistentVolumeClaims is empty
    set:
      persistentVolumeClaims: {}
    asserts:
      - hasDocuments:
          count: 0

  - it: should not render when persistentVolumeClaims is not defined
    asserts:
      - hasDocuments:
          count: 0

  - it: should render with default access modes when not specified
    set:
      persistentVolumeClaims:
        data:
          spec:
            resources:
              requests:
                storage: 10Gi
    asserts:
      - isKind:
          of: PersistentVolumeClaim
      - contains:
          path: spec.accessModes
          content: ReadWriteOnce

  - it: should not render annotations when empty
    set:
      persistentVolumeClaims:
        data:
          annotations: {}
          spec:
            resources:
              requests:
                storage: 10Gi
    asserts:
      - isKind:
          of: PersistentVolumeClaim
      - notExists:
          path: metadata.annotations
