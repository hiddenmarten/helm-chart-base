suite: Deployment template
templates:
  - templates/deployment.tpl

tests:
  - it: renders a Deployment with basic configuration
    set:
      image:
        repository: nginx
        tag: latest
    asserts:
      - isKind:
          of: Deployment
      - equal:
          path: metadata.name
          value: RELEASE-NAME-base-test
      - equal:
          path: spec.template.spec.containers[0].image
          value: nginx:latest

  - it: renders a Deployment with custom name
    skip:
      reason: "YAML formatting issue needs investigation"
    set:
      image:
        repository: nginx
        tag: latest
      fullnameOverride: custom-app
    asserts:
      - isKind:
          of: Deployment
      - equal:
          path: metadata.name
          value: custom-app

  - it: renders a Deployment with replica count
    skip:
      reason: "under implementation"
    set:
      image:
        repository: nginx
        tag: latest
      replicaCount: 3
    asserts:
      - isKind:
          of: Deployment
      - equal:
          path: spec.replicas
          value: 3

  - it: renders a Deployment with environment variables from configMaps
    set:
      image:
        repository: nginx
        tag: latest
      configMaps:
        envVars:
          data:
            TEST_VAR: test_value
    asserts:
      - isKind:
          of: Deployment
      - contains:
          path: spec.template.spec.containers[0].envFrom
          content:
            configMapRef:
              name: RELEASE-NAME-base-test-env-vars

  - it: renders a Deployment with environment variables from secrets
    set:
      image:
        repository: nginx
        tag: latest
      secrets:
        envVars:
          data:
            SECRET_VAR: secret_value
    asserts:
      - isKind:
          of: Deployment
      - contains:
          path: spec.template.spec.containers[0].envFrom
          content:
            secretRef:
              name: RELEASE-NAME-base-test-env-vars

  - it: renders a Deployment with resource limits
    skip:
      reason: "under implementation"
    set:
      image:
        repository: nginx
        tag: latest
      resources:
        limits:
          cpu: 100m
          memory: 128Mi
        requests:
          cpu: 50m
          memory: 64Mi
    asserts:
      - isKind:
          of: Deployment
      - equal:
          path: spec.template.spec.containers[0].resources.limits.cpu
          value: 100m
      - equal:
          path: spec.template.spec.containers[0].resources.requests.memory
          value: 64Mi

  - it: should render deployment with only image configured
    set:
      image:
        repository: nginx
        tag: latest
    asserts:
      - isKind:
          of: Deployment
      - equal:
          path: metadata.name
          value: RELEASE-NAME-base-test
      - equal:
          path: spec.template.spec.containers[0].image
          value: nginx:latest

  - it: should not render envFrom when no config maps or secrets have data
    set:
      image:
        repository: nginx
        tag: latest
      configMaps:
        envVars:
          data: {}
      secrets:
        envVars:
          data: {}
    asserts:
      - isKind:
          of: Deployment
      - notExists:
          path: spec.template.spec.containers[0].envFrom

  - it: should not render livenessProbe when empty
    set:
      image:
        repository: nginx
        tag: latest
      livenessProbe: {}
    asserts:
      - isKind:
          of: Deployment
      - notExists:
          path: spec.template.spec.containers[0].livenessProbe

  - it: should not render readinessProbe when empty
    set:
      image:
        repository: nginx
        tag: latest
      readinessProbe: {}
    asserts:
      - isKind:
          of: Deployment
      - notExists:
          path: spec.template.spec.containers[0].readinessProbe

  - it: should not render resources when empty
    set:
      image:
        repository: nginx
        tag: latest
      resources: {}
    asserts:
      - isKind:
          of: Deployment
      - notExists:
          path: spec.template.spec.containers[0].resources

  - it: should not render securityContext when empty
    set:
      image:
        repository: nginx
        tag: latest
      securityContext: {}
    asserts:
      - isKind:
          of: Deployment
      - notExists:
          path: spec.template.spec.containers[0].securityContext

  - it: should not render pod securityContext when empty
    set:
      image:
        repository: nginx
        tag: latest
      pod:
        securityContext: {}
    asserts:
      - isKind:
          of: Deployment
      - notExists:
          path: spec.template.spec.securityContext

  - it: should not render imagePullSecrets when empty
    set:
      image:
        repository: nginx
        tag: latest
      imagePullSecrets: []
    asserts:
      - isKind:
          of: Deployment
      - notExists:
          path: spec.template.spec.imagePullSecrets

  - it: should not render nodeSelector when empty
    set:
      image:
        repository: nginx
        tag: latest
      nodeSelector: {}
    asserts:
      - isKind:
          of: Deployment
      - notExists:
          path: spec.template.spec.nodeSelector

  - it: should not render affinity when empty
    set:
      image:
        repository: nginx
        tag: latest
      affinity: {}
    asserts:
      - isKind:
          of: Deployment
      - notExists:
          path: spec.template.spec.affinity

  - it: should not render tolerations when empty
    set:
      image:
        repository: nginx
        tag: latest
      tolerations: []
    asserts:
      - isKind:
          of: Deployment
      - notExists:
          path: spec.template.spec.tolerations

  - it: should not render ports when service.ports is empty
    set:
      image:
        repository: nginx
        tag: latest
      service:
        ports: {}
    asserts:
      - isKind:
          of: Deployment
      - notExists:
          path: spec.template.spec.containers[0].ports
