suite: All-in-One StatefulSet template - Corrected
templates:
  - templates/all_in_one_statefulset.tpl

tests:
  - it: renders StatefulSet with ServiceAccount only (no service without ports)
    set:
      statefulset:
        spec:
          template:
            spec:
              containers:
                nginx:
                  image:
                    repository: nginx
    asserts:
      - hasDocuments:
          count: 2
      - isKind:
          of: StatefulSet
        documentIndex: 0
      - isKind:
          of: ServiceAccount
        documentIndex: 1
      - equal:
          path: metadata.name
          value: RELEASE-NAME-base-test
        documentIndex: 0
      - equal:
          path: spec.template.spec.containers[0].image
          value: nginx:latest
        documentIndex: 0
      - equal:
          path: spec.serviceName
          value: RELEASE-NAME-base-test
        documentIndex: 0

  - it: renders StatefulSet with headless service when ports are defined
    set:
      statefulset:
        spec:
          template:
            spec:
              containers:
                nginx:
                  image:
                    repository: nginx
      service:
        spec:
          ports:
            http:
              port: 80
    asserts:
      - hasDocuments:
          count: 3
      - isKind:
          of: StatefulSet
        documentIndex: 0
      - isKind:
          of: Service
        documentIndex: 1
      - isKind:
          of: ServiceAccount
        documentIndex: 2
      - equal:
          path: spec.clusterIP
          value: None
        documentIndex: 1
      - equal:
          path: spec.ports[0].port
          value: 80
        documentIndex: 1

  - it: renders StatefulSet with configMaps and secrets
    set:
      statefulset:
        spec:
          template:
            spec:
              containers:
                nginx:
                  image:
                    repository: nginx
      configMaps:
        envVars:
          data:
            CONFIG_VAR: config_value
      secrets:
        envVars:
          data:
            SECRET_VAR: secret_value
      service:
        spec:
          ports:
            http:
              port: 80
    asserts:
      - hasDocuments:
          count: 5
      - isKind:
          of: ConfigMap
        documentIndex: 0
      - isKind:
          of: StatefulSet
        documentIndex: 1
      - isKind:
          of: Secret
        documentIndex: 2
      - isKind:
          of: Service
        documentIndex: 3
      - isKind:
          of: ServiceAccount
        documentIndex: 4
      - equal:
          path: data.CONFIG_VAR
          value: config_value
        documentIndex: 0
      - contains:
          path: spec.template.spec.containers[0].envFrom
          content:
            configMapRef:
              name: RELEASE-NAME-base-test-env-vars
        documentIndex: 1
      - contains:
          path: spec.template.spec.containers[0].envFrom
          content:
            secretRef:
              name: RELEASE-NAME-base-test-env-vars
        documentIndex: 1

  - it: renders StatefulSet with persistent volume claims
    set:
      statefulset:
        spec:
          volumeClaimTemplates:
            data:
              mount:
                mountPath: "/var/lib/data"
              spec:
                accessModes: ["ReadWriteOnce"]
                resources:
                  requests:
                    storage: 10Gi
          template:
            spec:
              containers:
                nginx:
                  image:
                    repository: nginx
      persistentVolumeClaims:
        config:
          mount:
            mountPath: "/var/lib/config"
          spec:
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: 1Gi
      service:
        spec:
          ports:
            http:
              port: 80
    asserts:
      - hasDocuments:
          count: 4
      - isKind:
          of: StatefulSet
        documentIndex: 0
      - isKind:
          of: PersistentVolumeClaim
        documentIndex: 1
      - isKind:
          of: Service
        documentIndex: 2
      - isKind:
          of: ServiceAccount
        documentIndex: 3
      - equal:
          path: spec.volumeClaimTemplates[0].metadata.name
          value: data
        documentIndex: 0
      - equal:
          path: spec.volumeClaimTemplates[0].spec.resources.requests.storage
          value: 10Gi
        documentIndex: 0
      - equal:
          path: metadata.name
          value: RELEASE-NAME-base-test-config
        documentIndex: 1

  - it: renders StatefulSet with ingress
    set:
      statefulset:
        spec:
          template:
            spec:
              containers:
                nginx:
                  image:
                    repository: nginx
      ingress:
        spec:
          rules:
            "example.com":
              http:
                paths:
                  "/":
                    backend:
                      service:
                        port:
                          name: http
      service:
        spec:
          ports:
            http:
              port: 80
    asserts:
      - hasDocuments:
          count: 4
      - isKind:
          of: StatefulSet
        documentIndex: 0
      - isKind:
          of: Ingress
        documentIndex: 1
      - isKind:
          of: Service
        documentIndex: 2
      - isKind:
          of: ServiceAccount
        documentIndex: 3
      - equal:
          path: spec.rules[0].host
          value: example.com
        documentIndex: 1
      - equal:
          path: spec.rules[0].http.paths[0].path
          value: /
        documentIndex: 1

  - it: renders StatefulSet with service monitor
    set:
      statefulset:
        spec:
          template:
            spec:
              containers:
                nginx:
                  image:
                    repository: nginx
      serviceMonitor:
        enabled: true
        spec:
          endpoints:
            - port: metrics
      service:
        spec:
          ports:
            metrics:
              port: 9090
    asserts:
      - hasDocuments:
          count: 4
      - isKind:
          of: StatefulSet
        documentIndex: 0
      - isKind:
          of: Service
        documentIndex: 1
      - isKind:
          of: ServiceAccount
        documentIndex: 2
      - isKind:
          of: ServiceMonitor
        documentIndex: 3
      - equal:
          path: spec.endpoints[0].port
          value: metrics
        documentIndex: 3

  - it: renders StatefulSet with complex configuration
    set:
      statefulset:
        spec:
          replicas: 3
          podManagementPolicy: Parallel
          updateStrategy:
            type: RollingUpdate
            rollingUpdate:
              partition: 1
          volumeClaimTemplates:
            data:
              mount:
                mountPath: "/var/lib/data"
              spec:
                accessModes: ["ReadWriteOnce"]
                resources:
                  requests:
                    storage: 20Gi
                storageClassName: fast-ssd
            logs:
              mount:
                mountPath: "/var/lib/logs"
              spec:
                accessModes: ["ReadWriteOnce"]
                resources:
                  requests:
                    storage: 5Gi
          template:
            spec:
              containers:
                nginx:
                  image:
                    repository: nginx
                    tag: "1.25"
                  resources:
                    limits:
                      cpu: 200m
                      memory: 256Mi
                    requests:
                      cpu: 100m
                      memory: 128Mi
                sidecar:
                  image:
                    repository: busybox
                    tag: "1.35"
      configMaps:
        config:
          data:
            nginx.conf: |
              events {}
              http {
                server {
                  listen 80;
                  location / {
                    return 200 "OK";
                  }
                }
              }
      secrets:
        tls:
          data:
            tls.crt: LS0tLS1CRUdJTi...
            tls.key: LS0tLS1CRUdJTi...
      service:
        spec:
          ports:
            http:
              port: 80
              targetPort: 80
            https:
              port: 443
              targetPort: 443
      serviceAccount:
        create: true
    asserts:
      - hasDocuments:
          count: 5
      - isKind:
          of: ConfigMap
        documentIndex: 0
      - isKind:
          of: StatefulSet
        documentIndex: 1
      - isKind:
          of: Secret
        documentIndex: 2
      - isKind:
          of: Service
        documentIndex: 3
      - isKind:
          of: ServiceAccount
        documentIndex: 4
      - equal:
          path: spec.replicas
          value: 3
        documentIndex: 1
      - equal:
          path: spec.podManagementPolicy
          value: Parallel
        documentIndex: 1
      - equal:
          path: spec.updateStrategy.type
          value: RollingUpdate
        documentIndex: 1
      - equal:
          path: spec.updateStrategy.rollingUpdate.partition
          value: 1
        documentIndex: 1
      - equal:
          path: spec.volumeClaimTemplates[0].metadata.name
          value: data
        documentIndex: 1
      - equal:
          path: spec.volumeClaimTemplates[1].metadata.name
          value: logs
        documentIndex: 1
      - equal:
          path: spec.template.spec.containers[0].image
          value: nginx:1.25
        documentIndex: 1
      - equal:
          path: spec.template.spec.containers[1].image
          value: busybox:1.35
        documentIndex: 1
      - equal:
          path: spec.clusterIP
          value: None
        documentIndex: 3
      - equal:
          path: spec.ports[0].port
          value: 80
        documentIndex: 3
      - equal:
          path: spec.ports[1].port
          value: 443
        documentIndex: 3

  - it: should render only ServiceAccount when StatefulSet is disabled
    set:
      statefulset:
        enabled: false
        spec:
          template:
            spec:
              containers:
                nginx:
                  image:
                    repository: nginx
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: ServiceAccount
        documentIndex: 0
